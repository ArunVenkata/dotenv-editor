#!/bin/bash


###
# Global Config
###
DIALOG=${DIALOG=dialog}
MENU_LIST=""
MENU_OPTIONS=""
DOTENV_FILE=.env
CURRENT=""

###
# Welcome: display a nice and warm welcome message.
###
function welcomeMessage() {
    $DIALOG \
        --clear \
        --title "Setup" \
        --clear \
        --msgbox "$APP_TITLE\n\nThis setup will guide you through configuring all the existing variables.\n\nTheir defaults are already prefilled, so hit ENTER to go the next one." \
        20 80
}



### 
# Determine if .env file exists or create a new file by copying one of the 
# .env-* files as a starting point.
###
function determineDotEnvFile() {
    echo "Check of existing .env file\n";
    # Detect .env-* files

    echo "Or choose sample .env-* file.\n";
    # If count == 0 => error
    # If count > 0 => show dialog
    # If count == 1 => want to use this one? perhaps copy?
}




function detectFullKeyOrCategory () {
    # CURRENT=$1

    echo "CURRENT: $CURRENT";


    # Check if a single option has been chosen
    CNT_MATCHES=`cat $DOTENV_FILE | grep "$CURRENT=" | wc -l`
    if [ $CNT_MATCHES == 1 ]; then
        return $CURRENT;
    fi

    echo "MATCHES: $CNT_MATCHES"

    PREFIX=$CURRENT"_"
    # echo "PREFIX: $PREFIX"
    CNT_MATCHES=`cat $DOTENV_FILE | grep "$PREFIX" | wc -l`
    echo "MATCHES: $CNT_MATCHES"

    if [ "$CURRENT" == "" ]; then
        OPTIONS=`awk -F= '{print $1 }' $DOTENV_FILE  | grep -v '^#' | grep -v '^$' | awk -F"_" '{print $1}' | sort | uniq`
    else
        OPTIONS=`awk -F= '{print $1 }' $DOTENV_FILE  | grep -v '^#' | grep "^$CURRENT" | grep -v '^$'`
        # @todo: strip off current part
    fi

    VARIABLE_LIST=`awk -F= '{print $1 }' $DOTENV_FILE  | grep -v '^#' | grep -v '^$'`
    VARIABLE_GROUP=`awk -F= '{print $1 }' $DOTENV_FILE  | grep -v '^#' | grep -v '^$' | awk -F"_" '{print $1}' | sort | uniq`

    MENU_LIST=""
    for i in $VARIABLE_LIST; do
        PREFIX=`echo $i | awk -F"_" '{print $1}'`
        REST=`echo $i | awk -F"_" '{print $2}'`
    
        VALUE=`./bin/dotenv.sh get $i | sed -e 's/^"//' -e 's/"$//'`
        # VALUE=`./bin/dotenv.sh get $i `
        MENU_LIST="$MENU_LIST $i \"$VALUE\" "
        # echo "- $i => $VALUE"
        #$DIALOG --clear --title "Configuration - $i" --inputbox "$i" 8 80 "`./bin/dotenv.sh get $i`"
    done

    # echo $MENU_LIST;
    # return $MENU_LIST
}

function setValue() {
    KEY=$1

    VALUE=`./bin/dotenv.sh get $KEY | sed -e 's/^"//' -e 's/"$//'`

    # `./bin/dotenv.sh set $KEY $VALUE | sed -e 's/^"//' -e 's/"$//'`
}



# function mainMenu() {
#     # echo "hi";
#     detectFullKeyOrCategory
#     echo $MENU_LIST;
#     # exit;

#     choosenMenuOptions=$($DIALOG --cancel-button "Exit" --title "Dotenv Editor" --fb --menu "Choose an option" 15 60 6 \
#         $MENU_LIST \
#         3>&1 1>&2 2>&3)
#     EXIT_STATUS=$?
#     [[ "$EXIT_STATUS" = 1 ]] && exit;	#test if exit button is pressed

#     echo "OPTION: $choosenMenuOptions\n"

#     case $choosenMenuOptions in
#         Exit) #Exit the dotenv editor application
#         	# echo "1 => Aap"
#         	# clear;
#             echo $MENU_LIST
#         	exit;
#     	    ;;

#         $CURRENT)
#             echo "CURRENT!! WHOOAAAAHHH"
#             ;;

# 	    *)
#             echo $choosenMenuOptions
# 			echo "Other: $choosenMenuOptions"
#             exit;
# 			;;
# 	esac
# 	mainMenu
# }


###
# Menu: Display a menu using dialog/whiptail with the provided options. The
# return value is the selected item.
###
function menu() {
    # MENU_LIST= $1
    SELECTED_ITEM=$($DIALOG \
        --cancel-button "Exit" \
        --title "Dotenv Editor" \
        --fb \
        --menu "Choose an option" \
        25 60 16 \
        $MENU_LIST \
        3>&1 1>&2 2>&3)
    EXIT_STATUS=$?
    [[ "$EXIT_STATUS" = 1 ]] && exit;    #test if exit button is pressed

    return $SELECTED_ITEM;
}


###
# Main: show the main menu of (grouped) topics based on the select prefix. The
# main program keeps running until the user has selected a topic or exited the
# application.
###
function main() {
    detectFullKeyOrCategory $CURRENT

    SELECTED_ITEM= menu
    echo "SELECTED: $SELECTED_ITEM"

    case $SELECTED_ITEM in
        Exit) #Exit the dotenv editor application
            # echo "1 => Aap"
            # clear;
            echo $MENU_LIST
            exit;
            ;;

        $CURRENT)
            echo "CURRENT!! WHOOAAAAHHH"
            ;;

        *)
            echo "CURRENT: $CURRENT"

            # Check if a single option has been chosen
            CNT_MATCHES=`cat $DOTENV_FILE | grep "$CURRENT=" | wc -l`
            if [ $CNT_MATCHES == 1 ]; then
                echo "MATCH: $CURRENT"
                setValue $CURRENT

            else
                echo $SELECTED_ITEM
                echo "ITEM: $SELECTED_ITEM"
                exit;
            fi

            ;;
    esac
    main
}




# Display welcome message
# welcomeMessage

# Select .env file (or copy from a sample file)
DOTENV_FILE= determineDotEnvFile

# Run the main program.
main